Resources:
  AdminUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AutoVerifiedAttributes:
        - email
#       EmailConfiguration:
#         EmailSendingAccount: ${self:custom.cognitoEmailSendingAccount}
#         SourceArn: "arn:aws:ses:[ここにArn]:identity/[ここにemailAddress]"
      EmailVerificationMessage: "アカウントが作成されました。認証を行ってください{####}."
      EmailVerificationSubject: "[サービス名] アカウント認証"
      # EmailVerificationMessage: "Your account created Prease click link and verify your account. \n Your ActivationCode is {####}."
      # EmailVerificationSubject: "Email Title"
      MfaConfiguration: "OFF"
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireSymbols: true
          RequireUppercase: true
      UserPoolName: ${self:custom.resourcePrefix}-AdminUserPool
      UsernameAttributes:
        - email
  AdminUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ${self:custom.resourcePrefix}-AdminUserPoolClient
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      GenerateSecret: false
      UserPoolId:
        Ref: AdminUserPool
  AdminUserIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: ${self:custom.resourcePrefix}-AdminUserIdentityPool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: AdminUserPoolClient
          ProviderName:
            Fn::GetAtt: [ "AdminUserPool", "ProviderName" ]

  CognitoUserIdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: AdminUserIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [AdminUserAuthRole, Arn]

  AdminUserAuthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud":
                  Ref: AdminUserIdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": authenticated
      Policies:
        - PolicyName: ${self:custom.resourcePrefix}-AdminUserAuthorizedPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "mobileanalytics:PutEvents"
                  - "cognito-sync:*"
                  - "cognito-identity:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "execute-api:Invoke"
                Resource:
                  # Allow users to invoke hello GET API
                  - Fn::Join:
                      - ""
                      - - "arn:aws:execute-api:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - ":"
                        - "Fn::ImportValue": ${self:custom.stageName}-QARecommenderApiId
                        # /stageName/method/path....
                        - "/*/*/admin/*"

Outputs:
  AdminUserPoolId:
    Value:
      Ref: AdminUserPool
    Export:
      Name: ${self:custom.resourcePrefix}-AdminUserPoolId

  AdminUserPoolClientId:
    Value:
      Ref: AdminUserPoolClient
    Export:
      Name: ${self:custom.resourcePrefix}-AdminUserPoolClientId

  AdminCognitoUserIdentityPool:
    Value:
      Ref: AdminUserIdentityPool
    Export:
      Name: ${self:custom.stageName}-AdminUserIdentityPoolId
