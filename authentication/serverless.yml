service: toi-toy-authentication

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-northeast-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            - "/*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${self:custom.toiToyPublicBucketName}
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${self:custom.toiToyPublicBucketName}
            - "/*"

custom:
  stageName: "${opt:stage, self:provider.stage}"
  toiToyPublicBucketName: ${self:custom.stageName}-toi-toy-public-image-storage
  resourcePrefix: "${self:custom.stageName}-school" 
  # cognitoEmailSendingAccount: ${env:COGNITO_EMAIL_SENDING_ACCOUNT, "DEVELOPER"}
  #

functions:
  PostConfirmation:
    handler: app/interface/cognito.post_confirmation_handler
    events:
      - cognitoUserPool:
          pool: ${self:custom.resourcePrefix}-ToiToyUserPool
          trigger: PostConfirmation
          existing: true
    environment:
      TOI_TOY_PUBLICK_BUCKET: ${self:custom.toiToyPublicBucketName}

resources:
  - ${file(resources/cognito.yml)}
