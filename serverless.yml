service: school-qa-recommender

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-northeast-1
  iamRoleStatements:
    ${file(serverless/iam_role.yml):iamRoleStatements}
  environment:
    STAGE_NAME: "${self:custom.stageName}"

plugins:
  - serverless-plugin-split-stacks

package:
  execute:
    - node_modules/*
    - authentication/**
    - dashboard/**
    - tests/**

custom:
  stageName: "${opt:stage, self:provider.stage}"
  resourcePrefix: "${self:custom.stageName}-qa" 
  lambdaHandlerPrefix: "app/interfaces/"
  splitStacks:
    perFunction: false
    perType: true
    perGroupFunction: true
    nestedStackCount: 50


functions:
  LambdaApiCreateQuestion:
    handler: ${self:custom.lambdaHandlerPrefix}api/question.create_question_handler
    name: ${self:custom.resourcePrefix}-create-question
    events:
      - http:
          path: admin/question
          method: post
          cors: true
          authorizer: aws_iam
    tags:
      TYPE: API
      SERVICE: Question


  LambdaApiFindQuestion:
    handler: ${self:custom.lambdaHandlerPrefix}api/question.find_question_handler
    name: ${self:custom.resourcePrefix}-find-question
    events:
      - http:
          path: admin/question/{question_id}
          method: get
          cors: true
          authorizer: aws_iam
    tags:
      TYPE: API
      SERVICE: Question

  LambdaApiUpdateQuestion:
    handler: ${self:custom.lambdaHandlerPrefix}api/question.update_question_handler
    name: ${self:custom.resourcePrefix}-update-question
    events:
      - http:
          path: admin/question/{question_id}
          method: put
          cors: true
          authorizer: aws_iam
    tags:
      TYPE: API
      SERVICE: Question

resources:
  - ${file(serverless/resources/outputs.yml)}
  - ${file(serverless/resources/dynamodb.yml)}
